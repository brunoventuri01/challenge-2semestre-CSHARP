// <auto-generated />
using System;
using Advisor.Api.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Advisor.Api.Migrations
{
    [DbContext(typeof(AdvisorDbContext))]
    partial class AdvisorDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("Advisor.Api.Domain.Models.Ativo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Classe")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("ESG")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Liquidez")
                        .HasColumnType("REAL");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("RetornoEsperado")
                        .HasColumnType("REAL");

                    b.Property<double>("Risco")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Ativos");
                });

            modelBuilder.Entity("Advisor.Api.Domain.Models.Carteira", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CriadaEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("Explicacao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Carteiras");
                });

            modelBuilder.Entity("Advisor.Api.Domain.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("AporteInicial")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("LiquidezDesejada")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Objetivo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Perfil")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("PrazoObjetivo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Advisor.Api.Domain.Models.MacroVariavel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Cambio")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Inflacao")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Selic")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Vigencia")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Macros");
                });

            modelBuilder.Entity("Advisor.Api.Domain.Models.Posicao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AtivoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarteiraId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Percentual")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AtivoId");

                    b.HasIndex("CarteiraId");

                    b.ToTable("Posicoes");
                });

            modelBuilder.Entity("Advisor.Api.Domain.Models.Carteira", b =>
                {
                    b.HasOne("Advisor.Api.Domain.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Advisor.Api.Domain.Models.Posicao", b =>
                {
                    b.HasOne("Advisor.Api.Domain.Models.Ativo", "Ativo")
                        .WithMany()
                        .HasForeignKey("AtivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Advisor.Api.Domain.Models.Carteira", "Carteira")
                        .WithMany("Posicoes")
                        .HasForeignKey("CarteiraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ativo");

                    b.Navigation("Carteira");
                });

            modelBuilder.Entity("Advisor.Api.Domain.Models.Carteira", b =>
                {
                    b.Navigation("Posicoes");
                });
#pragma warning restore 612, 618
        }
    }
}
